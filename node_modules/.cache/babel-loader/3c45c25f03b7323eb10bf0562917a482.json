{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/july/Desktop/study/my-todo/my-todo-app/src/App.js\";\nimport React from \"react\";\nimport TodoList from './components/TodoList';\nimport \"./App.css\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nfunction App(todos, setTodos) {\n  // const defaultTodo = [\n  //   {\n  //     id: \"1\",\n  //     text: \"walk with a dog\",\n  //   },\n  //   {\n  //     id: \"2\",\n  //     text: \"buy bread\",\n  //   },\n  // ];\n  // const [todos, setTodos] = useState(defaultTodo);\n  // const createTodo = (text) => {\n  //   if (text === \"\") {\n  //     return;\n  //   }\n  //   const newTodo = {\n  //     id: Math.floor(Math.random() * 10000),\n  //     text: text,\n  //   };\n  //   const newTodos = [...todos, newTodo];\n  //   setTodos(newTodos);\n  // };\n  // const removeTodo = (id) => {\n  //   const newTodos = todos.filter((todo) => todo.id !== id);\n  //   setTodos(newTodos);\n  // };\n  // const updateTodo = (id, newTodo) => {\n  //   const newTodos = todos.map((todo) => {\n  //     if (todo.id === id) {\n  //       return newTodo;\n  //     }\n  //     return todo;\n  //   });\n  //   setTodos(newTodos);\n  // };\n  const handleOnDragEnd = result => {\n    if (!result.destination) return;\n    const items = Array.from(todos);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    setTodos(items);\n  }; // const todoHtml = todos.map((todo) => (\n  //   <Todo\n  //     className=\"todo-app\"\n  //     todo={todo}\n  //     updateTodo={updateTodo}\n  //     removeTodo={removeTodo}\n  //   />\n  // ));\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleOnDragEnd,\n      children: /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this); // return (\n  //   <>\n  //           <div className=\"todo-app\">\n  //             <TodoForm createTodo={createTodo} />\n  //             {todoHtml}\n  //           </div>\n  //   </>\n  // );\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/july/Desktop/study/my-todo/my-todo-app/src/App.js"],"names":["React","TodoList","DragDropContext","App","todos","setTodos","handleOnDragEnd","result","destination","items","Array","from","reorderedItem","splice","source","index"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,WAAP;AACA,SAASC,eAAT,QAAgC,qBAAhC;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoBC,QAApB,EAA8B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,eAAe,GAAIC,MAAD,IAAY;AAClC,QAAI,CAACA,MAAM,CAACC,WAAZ,EAAyB;AAEzB,UAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWP,KAAX,CAAd;AACA,UAAM,CAACQ,aAAD,IAAkBH,KAAK,CAACI,MAAN,CAAaN,MAAM,CAACO,MAAP,CAAcC,KAA3B,EAAkC,CAAlC,CAAxB;AACAN,IAAAA,KAAK,CAACI,MAAN,CAAaN,MAAM,CAACC,WAAP,CAAmBO,KAAhC,EAAuC,CAAvC,EAA0CH,aAA1C;AAEAP,IAAAA,QAAQ,CAACI,KAAD,CAAR;AACD,GARD,CA5C4B,CAsD5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BAEE,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAEH,eAA5B;AAAA,6BAEI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF,CA/D4B,CAoH5B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACD;;KA7HQH,G;AA+HT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport TodoList from './components/TodoList'\nimport \"./App.css\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nfunction App(todos, setTodos) {\n  // const defaultTodo = [\n  //   {\n  //     id: \"1\",\n  //     text: \"walk with a dog\",\n  //   },\n  //   {\n  //     id: \"2\",\n  //     text: \"buy bread\",\n  //   },\n  // ];\n\n  // const [todos, setTodos] = useState(defaultTodo);\n\n  // const createTodo = (text) => {\n  //   if (text === \"\") {\n  //     return;\n  //   }\n\n  //   const newTodo = {\n  //     id: Math.floor(Math.random() * 10000),\n  //     text: text,\n  //   };\n\n  //   const newTodos = [...todos, newTodo];\n\n  //   setTodos(newTodos);\n  // };\n\n  // const removeTodo = (id) => {\n  //   const newTodos = todos.filter((todo) => todo.id !== id);\n  //   setTodos(newTodos);\n  // };\n\n  // const updateTodo = (id, newTodo) => {\n  //   const newTodos = todos.map((todo) => {\n  //     if (todo.id === id) {\n  //       return newTodo;\n  //     }\n  //     return todo;\n  //   });\n  //   setTodos(newTodos);\n  // };\n\n  const handleOnDragEnd = (result) => {\n    if (!result.destination) return;\n\n    const items = Array.from(todos);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    setTodos(items);\n  };\n\n  // const todoHtml = todos.map((todo) => (\n  //   <Todo\n  //     className=\"todo-app\"\n  //     todo={todo}\n  //     updateTodo={updateTodo}\n  //     removeTodo={removeTodo}\n  //   />\n  // ));\n\n  return (\n    <div className=\"todo-app\">\n       {/* <TodoForm createTodo={createTodo} /> */}\n      <DragDropContext onDragEnd={handleOnDragEnd}>\n        \n          <TodoList />\n        {/* <Droppable droppableId=\"characters\">\n          {(provided) => (\n            <div\n              className=\"characters\"\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {todos.map((todo, index) => {\n                return (\n                  <Draggable\n                    key={todo.id}\n                    draggableId={todo.id.toString()}\n                    index={index}\n                  >\n                    {(provided, snapshot) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={{\n                          userSelect: \"none\",\n                          backgroundColor: snapshot.isDragging\n                            ? \"#263B4A\"\n                            : \"transparent\",\n                          color: \"white\",\n                          ...provided.draggableProps.style,\n                        }}\n                      >\n                        <Todo\n                          className=\"todo-app\"\n                          todo={todo}\n                          updateTodo={updateTodo}\n                          removeTodo={removeTodo}\n                        />\n                      </div>\n                    )}\n                  </Draggable>\n                );\n              })}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable> */}\n      </DragDropContext>\n     </div>\n  );\n\n  // return (\n  //   <>\n  //           <div className=\"todo-app\">\n  //             <TodoForm createTodo={createTodo} />\n  //             {todoHtml}\n  //           </div>\n\n  //   </>\n  // );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}