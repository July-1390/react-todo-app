{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/july/Desktop/study/my-todo/my-todo-app/src/components/Todo.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { AiOutlineEdit } from \"react-icons/ai\";\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\nimport { FaCheck } from \"react-icons/fa\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nfunction Todo({\n  todo,\n  updateTodo,\n  removeTodo,\n  isHighlighted,\n  completeTodo\n}) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const displayMode = \"displayMode\";\n  const editMode = \"editMode\";\n  const [mode, setMode] = useState(displayMode);\n  const [newTodoText, setNewTodoText] = useState(todo.text);\n  const [checked, setChecked] = useState(!!todo.isCompleted);\n\n  const onEditButtonClick = e => {\n    e.preventDefault();\n    setMode(editMode);\n  };\n\n  const onSubmitButtonClick = e => {\n    e.preventDefault();\n    const newTodo = todo;\n    newTodo.text = newTodoText;\n    updateTodo(todo.id, newTodo);\n    setMode(displayMode);\n  };\n\n  const useStyles = makeStyles({\n    root: {\n      \"&:hover\": {\n        backgroundColor: \"transparent\"\n      }\n    },\n    icon: {\n      marginRight: 10,\n      borderRadius: 3,\n      width: 18,\n      height: 18,\n      boxShadow: \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\n      backgroundColor: \"#f5f8fa\",\n      backgroundImage: \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\n      \"$root.Mui-focusVisible &\": {\n        outline: \"2px auto rgba(112,138,98,54)\",\n        outlineOffset: 2\n      },\n      \"input:hover ~ &\": {\n        backgroundColor: \"#ebf1f5\"\n      },\n      \"input:disabled ~ &\": {\n        boxShadow: \"none\",\n        background: \"rgba(206,217,224,.5)\"\n      }\n    },\n    checkedIcon: {\n      backgroundColor: \"#8AAA79\",\n      backgroundImage: \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\n      \"&:before\": {\n        display: \"block\",\n        width: 18,\n        height: 18,\n        backgroundImage: \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" + \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" + \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n        content: '\"\"'\n      },\n      \"input:hover ~ &\": {\n        backgroundColor: \"#708A62\"\n      }\n    }\n  });\n\n  const StyledCheckbox = props => {\n    _s();\n\n    const classes = useStyles();\n    return /*#__PURE__*/_jsxDEV(Checkbox, {\n      className: classes.root,\n      onClick: () => completeTodo(todo.id),\n      onChange: () => setChecked(!checked),\n      checked: checked,\n      disableRipple: true,\n      color: \"default\",\n      checkedIcon: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: clsx(classes.icon, classes.checkedIcon)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this),\n      icon: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }, this),\n      inputProps: {\n        \"aria-label\": \"decorative checkbox\"\n      },\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }; // const Checkbox = (props) => (\n  //   <input\n  //   className=\"checkbox\"\n  //   type=\"checkbox\"\n  //   onClick={() => completeTodo(todo.id)}\n  //   checked={checked}\n  //   onChange={() => setChecked(!checked)}\n  //   {...props}\n  //   />\n  // )\n\n\n  _s(StyledCheckbox, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n    return [useStyles];\n  });\n\n  if (mode === displayMode) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `todo-item  ${isHighlighted ? \"highlightedTodo\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(StyledCheckbox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `todo-text ${todo.isCompleted && \"todo-is-completed\"}`,\n          children: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-edit\",\n          children: /*#__PURE__*/_jsxDEV(AiOutlineEdit, {\n            onClick: onEditButtonClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-delete\",\n          children: /*#__PURE__*/_jsxDEV(AiOutlineCloseCircle, {\n            onClick: () => removeTodo(todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else if (mode === editMode) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"submit-todo-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Update your todo\",\n          className: \"submit-todo-input\",\n          onChange: event => setNewTodoText(event.target.value),\n          value: newTodoText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-submit\",\n          onClick: onSubmitButtonClick,\n          children: /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\n\n_s2(Todo, \"ObiUznZ/KVdRZIUJKgylx+1C4I0=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/july/Desktop/study/my-todo/my-todo-app/src/components/Todo.jsx"],"names":["React","useState","AiOutlineEdit","AiOutlineCloseCircle","FaCheck","clsx","makeStyles","Checkbox","Todo","todo","updateTodo","removeTodo","isHighlighted","completeTodo","displayMode","editMode","mode","setMode","newTodoText","setNewTodoText","text","checked","setChecked","isCompleted","onEditButtonClick","e","preventDefault","onSubmitButtonClick","newTodo","id","useStyles","root","backgroundColor","icon","marginRight","borderRadius","width","height","boxShadow","backgroundImage","outline","outlineOffset","background","checkedIcon","display","content","StyledCheckbox","props","classes","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { AiOutlineEdit } from \"react-icons/ai\";\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\nimport { FaCheck } from \"react-icons/fa\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nfunction Todo({ todo, updateTodo, removeTodo, isHighlighted, completeTodo }) {\n  const displayMode = \"displayMode\";\n  const editMode = \"editMode\";\n\n  const [mode, setMode] = useState(displayMode);\n\n  const [newTodoText, setNewTodoText] = useState(todo.text);\n\n  const [checked, setChecked] = useState(!!todo.isCompleted);\n\n  const onEditButtonClick = (e) => {\n    e.preventDefault();\n    setMode(editMode);\n  };\n\n  const onSubmitButtonClick = (e) => {\n    e.preventDefault();\n    const newTodo = todo;\n    newTodo.text = newTodoText;\n\n    updateTodo(todo.id, newTodo);\n    setMode(displayMode);\n  };\n\n  const useStyles = makeStyles({\n    root: {\n      \"&:hover\": {\n        backgroundColor: \"transparent\",\n      },\n    },\n    icon: {\n      marginRight: 10,\n      borderRadius: 3,\n      width: 18,\n      height: 18,\n      boxShadow:\n        \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\n      backgroundColor: \"#f5f8fa\",\n      backgroundImage:\n        \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\n      \"$root.Mui-focusVisible &\": {\n        outline: \"2px auto rgba(112,138,98,54)\",\n        outlineOffset: 2,\n      },\n      \"input:hover ~ &\": {\n        backgroundColor: \"#ebf1f5\",\n      },\n      \"input:disabled ~ &\": {\n        boxShadow: \"none\",\n        background: \"rgba(206,217,224,.5)\",\n      },\n    },\n    checkedIcon: {\n      backgroundColor: \"#8AAA79\",\n      backgroundImage:\n        \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\n      \"&:before\": {\n        display: \"block\",\n        width: 18,\n        height: 18,\n        backgroundImage:\n          \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\n          \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\n          \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n        content: '\"\"',\n      },\n      \"input:hover ~ &\": {\n        backgroundColor: \"#708A62\",\n      },\n    },\n  });\n\n  const StyledCheckbox = (props) => {\n    const classes = useStyles();\n    return (\n      <Checkbox\n        className={classes.root}\n        onClick={() => completeTodo(todo.id)}\n        onChange={() => setChecked(!checked)}\n        checked={checked}\n        disableRipple\n        color=\"default\"\n        checkedIcon={\n          <span className={clsx(classes.icon, classes.checkedIcon)} />\n        }\n        icon={<span className={classes.icon} />}\n        inputProps={{ \"aria-label\": \"decorative checkbox\" }}\n        {...props}\n      />\n    );\n  };\n\n  // const Checkbox = (props) => (\n  //   <input\n  //   className=\"checkbox\"\n  //   type=\"checkbox\"\n  //   onClick={() => completeTodo(todo.id)}\n  //   checked={checked}\n  //   onChange={() => setChecked(!checked)}\n  //   {...props}\n  //   />\n  // )\n\n  if (mode === displayMode) {\n    return (\n      <>\n        <div className={`todo-item  ${isHighlighted ? \"highlightedTodo\" : \"\"}`}>\n          <StyledCheckbox />\n          <div\n            className={`todo-text ${todo.isCompleted && \"todo-is-completed\"}`}\n          >\n            {todo.text}\n          </div>\n          <div className=\"icon-edit\">\n            <AiOutlineEdit onClick={onEditButtonClick} />\n          </div>\n          <div className=\"icon-delete\">\n            <AiOutlineCloseCircle onClick={() => removeTodo(todo.id)} />\n          </div>\n        </div>\n      </>\n    );\n  } else if (mode === editMode) {\n    return (\n      <>\n        <form className=\"submit-todo-form\">\n          <input\n            type=\"text\"\n            placeholder=\"Update your todo\"\n            className=\"submit-todo-input\"\n            onChange={(event) => setNewTodoText(event.target.value)}\n            value={newTodoText}\n          />\n          <button className=\"button-submit\" onClick={onSubmitButtonClick}>\n            <FaCheck />\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}