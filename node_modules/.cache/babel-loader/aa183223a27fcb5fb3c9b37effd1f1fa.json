{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/july/Desktop/study/my-todo/my-todo-app/src/components/TodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\n\nfunction TodoList(defaultTodo) {\n  _s();\n\n  const [todos, setTodos] = useState(defaultTodo);\n\n  const createTodo = text => {\n    if (text === \"\") {\n      return;\n    }\n\n    const newTodo = {\n      id: Math.floor(Math.random() * 10000),\n      text: text\n    };\n    const newTodos = [...todos, newTodo];\n    setTodos(newTodos);\n  };\n\n  const removeTodo = id => {\n    const newTodos = todos.filter(todo => todo.id !== id);\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (id, newTodo) => {\n    const newTodos = todos.map(todo => {\n      if (todo.id === id) {\n        return newTodo;\n      }\n\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n      createTodo: createTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      className: \"todo-app\",\n      updateTodo: updateTodo,\n      removeTodo: removeTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TodoList, \"GJtCbS+0/pvZ2CkotHGybsoGilc=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/july/Desktop/study/my-todo/my-todo-app/src/components/TodoList.jsx"],"names":["React","useState","TodoForm","Todo","TodoList","defaultTodo","todos","setTodos","createTodo","text","newTodo","id","Math","floor","random","newTodos","removeTodo","filter","todo","updateTodo","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,QAAT,CAAkBC,WAAlB,EAA+B;AAAA;;AAE7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,WAAD,CAAlC;;AAEA,QAAMG,UAAU,GAAIC,IAAD,IAAU;AAC3B,QAAIA,IAAI,KAAK,EAAb,EAAiB;AACf;AACD;;AAED,UAAMC,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADU;AAEdL,MAAAA,IAAI,EAAEA;AAFQ,KAAhB;AAKA,UAAMM,QAAQ,GAAG,CAAC,GAAGT,KAAJ,EAAWI,OAAX,CAAjB;AAEAH,IAAAA,QAAQ,CAACQ,QAAD,CAAR;AACD,GAbD;;AAeA,QAAMC,UAAU,GAAIL,EAAD,IAAQ;AACzB,UAAMI,QAAQ,GAAGT,KAAK,CAACW,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACP,EAAL,KAAYA,EAAnC,CAAjB;AACAJ,IAAAA,QAAQ,CAACQ,QAAD,CAAR;AACD,GAHD;;AAKA,QAAMI,UAAU,GAAG,CAACR,EAAD,EAAKD,OAAL,KAAiB;AAClC,UAAMK,QAAQ,GAAGT,KAAK,CAACc,GAAN,CAAWF,IAAD,IAAU;AACnC,UAAIA,IAAI,CAACP,EAAL,KAAYA,EAAhB,EAAoB;AAClB,eAAOD,OAAP;AACD;;AACD,aAAOQ,IAAP;AACD,KALgB,CAAjB;AAMAX,IAAAA,QAAQ,CAACQ,QAAD,CAAR;AACD,GARD;;AAUA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,UAAU,EAAEP;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,UAAU,EAAEW,UAFd;AAGE,MAAA,UAAU,EAAEH;AAHd;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAUD;;GA5CQZ,Q;;KAAAA,Q;AA8CT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\n\nfunction TodoList(defaultTodo) {\n    \n  const [todos, setTodos] = useState(defaultTodo);\n\n  const createTodo = (text) => {\n    if (text === \"\") {\n      return;\n    }\n\n    const newTodo = {\n      id: Math.floor(Math.random() * 10000),\n      text: text,\n    };\n\n    const newTodos = [...todos, newTodo];\n\n    setTodos(newTodos);\n  };\n\n  const removeTodo = (id) => {\n    const newTodos = todos.filter((todo) => todo.id !== id);\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (id, newTodo) => {\n    const newTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        return newTodo;\n      }\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n\n  return (\n    <>\n      <TodoForm createTodo={createTodo} />\n      <Todo\n        className=\"todo-app\"\n        updateTodo={updateTodo}\n        removeTodo={removeTodo}\n      />\n    </>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}