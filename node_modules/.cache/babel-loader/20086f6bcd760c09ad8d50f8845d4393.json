{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/july/Desktop/study/my-todo/my-todo-app/src/components/TodoList.jsx\";\nimport React from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport Todo from \"./Todo\";\n\nfunction TodoList({\n  todos,\n  removeTodo,\n  updateTodo,\n  updateTodoList,\n  completeTodo\n}) {\n  const handleOnDragEnd = result => {\n    if (!result.destination) return;\n    const items = Array.from(todos);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    updateTodoList(items);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleOnDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"todo-list\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-list\",\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [todos.map((todo, index) => {\n            return /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: todo.id.toString(),\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: todo.isComplete ? \"todo-text complete\" : \"todo-text\",\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: /*#__PURE__*/_jsxDEV(Todo, {\n                  onClick: () => completeTodo(todo.id),\n                  todo: todo,\n                  updateTodo: updateTodo,\n                  removeTodo: removeTodo,\n                  isHighlighted: snapshot.isDragging\n                }, todo.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 23\n              }, this)\n            }, todo.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 19\n            }, this);\n          }), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/july/Desktop/study/my-todo/my-todo-app/src/components/TodoList.jsx"],"names":["React","DragDropContext","Draggable","Droppable","Todo","TodoList","todos","removeTodo","updateTodo","updateTodoList","completeTodo","handleOnDragEnd","result","destination","items","Array","from","reorderedItem","splice","source","index","provided","droppableProps","innerRef","map","todo","id","toString","snapshot","isComplete","draggableProps","dragHandleProps","isDragging","placeholder"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,QAAT,CAAkB;AAChBC,EAAAA,KADgB;AAEhBC,EAAAA,UAFgB;AAGhBC,EAAAA,UAHgB;AAIhBC,EAAAA,cAJgB;AAKhBC,EAAAA;AALgB,CAAlB,EAMG;AACD,QAAMC,eAAe,GAAIC,MAAD,IAAY;AAClC,QAAI,CAACA,MAAM,CAACC,WAAZ,EAAyB;AAEzB,UAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWV,KAAX,CAAd;AACA,UAAM,CAACW,aAAD,IAAkBH,KAAK,CAACI,MAAN,CAAaN,MAAM,CAACO,MAAP,CAAcC,KAA3B,EAAkC,CAAlC,CAAxB;AACAN,IAAAA,KAAK,CAACI,MAAN,CAAaN,MAAM,CAACC,WAAP,CAAmBO,KAAhC,EAAuC,CAAvC,EAA0CH,aAA1C;AAEAR,IAAAA,cAAc,CAACK,KAAD,CAAd;AACD,GARD;;AAUA,sBACE;AAAA,2BACE,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAEH,eAA5B;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,WAAW,EAAC,WAAvB;AAAA,kBACIU,QAAD,iBACC;AACE,UAAA,SAAS,EAAC,WADZ;AAAA,aAEMA,QAAQ,CAACC,cAFf;AAGE,UAAA,GAAG,EAAED,QAAQ,CAACE,QAHhB;AAAA,qBAKGjB,KAAK,CAACkB,GAAN,CAAU,CAACC,IAAD,EAAOL,KAAP,KAAiB;AAC1B,gCACE,QAAC,SAAD;AAEE,cAAA,WAAW,EAAEK,IAAI,CAACC,EAAL,CAAQC,QAAR,EAFf;AAGE,cAAA,KAAK,EAAEP,KAHT;AAAA,wBAKG,CAACC,QAAD,EAAWO,QAAX,kBACC;AACE,gBAAA,SAAS,EACPH,IAAI,CAACI,UAAL,GAAkB,oBAAlB,GAAyC,WAF7C;AAKE,gBAAA,GAAG,EAAER,QAAQ,CAACE,QALhB;AAAA,mBAMMF,QAAQ,CAACS,cANf;AAAA,mBAOMT,QAAQ,CAACU,eAPf;AAAA,uCASE,QAAC,IAAD;AAEE,kBAAA,OAAO,EAAE,MAAMrB,YAAY,CAACe,IAAI,CAACC,EAAN,CAF7B;AAGE,kBAAA,IAAI,EAAED,IAHR;AAIE,kBAAA,UAAU,EAAEjB,UAJd;AAKE,kBAAA,UAAU,EAAED,UALd;AAME,kBAAA,aAAa,EAAEqB,QAAQ,CAACI;AAN1B,mBACOP,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA;AATF,iBAION,KAJP;AAAA;AAAA;AAAA;AAAA;AANJ,eACOK,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,oBADF;AA4BD,WA7BA,CALH,EAmCGL,QAAQ,CAACY,WAnCZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA+CD;;KAhEQ5B,Q;AAkET,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport Todo from \"./Todo\";\n\nfunction TodoList({\n  todos,\n  removeTodo,\n  updateTodo,\n  updateTodoList,\n  completeTodo,\n}) {\n  const handleOnDragEnd = (result) => {\n    if (!result.destination) return;\n\n    const items = Array.from(todos);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    updateTodoList(items);\n  };\n\n  return (\n    <>\n      <DragDropContext onDragEnd={handleOnDragEnd}>\n        <Droppable droppableId=\"todo-list\">\n          {(provided) => (\n            <div\n              className=\"todo-list\"\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {todos.map((todo, index) => {\n                return (\n                  <Draggable\n                    key={todo.id}\n                    draggableId={todo.id.toString()}\n                    index={index}\n                  >\n                    {(provided, snapshot) => (\n                      <div\n                        className={\n                          todo.isComplete ? \"todo-text complete\" : \"todo-text\"\n                        }\n                        key={index}\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <Todo\n                          key={todo.id}\n                          onClick={() => completeTodo(todo.id)}\n                          todo={todo}\n                          updateTodo={updateTodo}\n                          removeTodo={removeTodo}\n                          isHighlighted={snapshot.isDragging}\n                        />\n                      </div>\n                    )}\n                  </Draggable>\n                );\n              })}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}