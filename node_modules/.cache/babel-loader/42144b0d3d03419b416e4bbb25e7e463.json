{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/july/Desktop/study/my-todo/my-todo-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TodoForm from './components/TodoForm';\nimport TodoList from \"./components/TodoList\";\nimport \"./App.css\"; // import { DragDropContext } from \"react-beautiful-dnd\";\n\nfunction App() {\n  _s();\n\n  const defaultTodo = [{\n    id: 1,\n    text: \"walk with a dog\"\n  }, {\n    id: 2,\n    text: \"buy bread\"\n  }];\n  const [todos, setTodos] = useState(defaultTodo);\n\n  const createTodo = text => {\n    if (text === \"\") {\n      return;\n    }\n\n    const newTodo = {\n      id: Math.floor(Math.random() * 10000),\n      text: text\n    };\n    const newTodos = [...todos, newTodo];\n    setTodos(newTodos);\n  }; // const removeTodo = (id) => {\n  //   const newTodos = todos.filter((todo) => todo.id !== id);\n  //   setTodos(newTodos);\n  // };\n  // const updateTodo = (id, newTodo) => {\n  //   const newTodos = todos.map((todo) => {\n  //     if (todo.id === id) {\n  //       return newTodo;\n  //     }\n  //     return todo;\n  //   });\n  //   setTodos(newTodos);\n  // };\n  // const handleOnDragEnd = (result) => {\n  //   if (!result.destination) return;\n  //   const items = Array.from(todos);\n  //   const [reorderedItem] = items.splice(result.source.index, 1);\n  //   items.splice(result.destination.index, 0, reorderedItem);\n  //   setTodos(items);\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n      createTodo: createTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this); // return (\n  //   <?>\n  //           <div className=\"todo-app\">\n  //             <TodoForm createTodo={createTodo} />\n  //             {todoHtml}\n  //           </div>\n  //   </?>\n  // );\n}\n\n_s(App, \"GJtCbS+0/pvZ2CkotHGybsoGilc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/july/Desktop/study/my-todo/my-todo-app/src/App.js"],"names":["React","useState","TodoForm","TodoList","App","defaultTodo","id","text","todos","setTodos","createTodo","newTodo","Math","floor","random","newTodos"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,WAAP,C,CACA;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,WAAW,GAAG,CAClB;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AAFR,GADkB,EAKlB;AACED,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AAFR,GALkB,CAApB;AAYA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACI,WAAD,CAAlC;;AAEA,QAAMK,UAAU,GAAIH,IAAD,IAAU;AAC3B,QAAIA,IAAI,KAAK,EAAb,EAAiB;AACf;AACD;;AAED,UAAMI,OAAO,GAAG;AACdL,MAAAA,EAAE,EAAEM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADU;AAEdP,MAAAA,IAAI,EAAEA;AAFQ,KAAhB;AAKA,UAAMQ,QAAQ,GAAG,CAAC,GAAGP,KAAJ,EAAWG,OAAX,CAAjB;AAEAF,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACD,GAbD,CAhBa,CA+Bb;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,UAAU,EAAEL;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAII,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAxDa,CA6Gb;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACD;;GAtHQN,G;;KAAAA,G;AAwHT,eAAeA,GAAf","sourcesContent":["import React, {useState} from \"react\";\nimport TodoForm from './components/TodoForm'\nimport TodoList from \"./components/TodoList\";\nimport \"./App.css\";\n// import { DragDropContext } from \"react-beautiful-dnd\";\n\nfunction App() {\n\n  const defaultTodo = [\n    {\n      id: 1,\n      text: \"walk with a dog\",\n    },\n    {\n      id: 2,\n      text: \"buy bread\",\n    },\n  ];\n  \n\n  const [todos, setTodos] = useState(defaultTodo);\n\n  const createTodo = (text) => {\n    if (text === \"\") {\n      return;\n    }\n\n    const newTodo = {\n      id: Math.floor(Math.random() * 10000),\n      text: text,\n    };\n\n    const newTodos = [...todos, newTodo];\n\n    setTodos(newTodos);\n  };\n\n  // const removeTodo = (id) => {\n  //   const newTodos = todos.filter((todo) => todo.id !== id);\n  //   setTodos(newTodos);\n  // };\n\n  // const updateTodo = (id, newTodo) => {\n  //   const newTodos = todos.map((todo) => {\n  //     if (todo.id === id) {\n  //       return newTodo;\n  //     }\n  //     return todo;\n  //   });\n  //   setTodos(newTodos);\n  // };\n\n  // const handleOnDragEnd = (result) => {\n  //   if (!result.destination) return;\n\n  //   const items = Array.from(todos);\n  //   const [reorderedItem] = items.splice(result.source.index, 1);\n  //   items.splice(result.destination.index, 0, reorderedItem);\n\n  //   setTodos(items);\n  // };\n\n  return (\n    <div className='todo-app'>\n      <TodoForm createTodo={createTodo} />\n\n      {/* <DragDropContext onDragEnd={handleOnDragEnd}> */}\n        <TodoList />\n        {/* <Droppable droppableId=\"characters\">\n          {(provided) => (\n            <div\n              className=\"characters\"\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {todos.map((todo, index) => {\n                return (\n                  <Draggable\n                    key={todo.id}\n                    draggableId={todo.id.toString()}\n                    index={index}\n                  >\n                    {(provided, snapshot) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={{\n                          userSelect: \"none\",\n                          backgroundColor: snapshot.isDragging\n                            ? \"#263B4A\"\n                            : \"transparent\",\n                          color: \"white\",\n                          ...provided.draggableProps.style,\n                        }}\n                      >\n                        <Todo\n                          className=\"todo-app\"\n                          todo={todo}\n                          updateTodo={updateTodo}\n                          removeTodo={removeTodo}\n                        />\n                      </div>\n                    )}\n                  </Draggable>\n                );\n              })}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable> */}\n      {/* </DragDropContext> */}\n    </div>\n  );\n\n  // return (\n  //   <?>\n  //           <div className=\"todo-app\">\n  //             <TodoForm createTodo={createTodo} />\n  //             {todoHtml}\n  //           </div>\n\n  //   </?>\n  // );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}