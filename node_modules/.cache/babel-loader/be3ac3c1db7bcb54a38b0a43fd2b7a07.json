{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/july/Desktop/study/my-todo/my-todo-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Todo from \"./components/Todo\";\nimport TodoForm from \"./components/TodoForm\";\nimport \"./App.css\"; // import ButtonText from \"./components/ButtonText\";\n\nfunction App() {\n  _s();\n\n  const defaultTodo = [{\n    id: 1,\n    text: \"walk with a dog\"\n  }, {\n    id: 2,\n    text: \"buy bread\"\n  }];\n  const [todos, setTodos] = useState(defaultTodo);\n\n  const createTodo = text => {\n    if (text === \"\") {\n      return;\n    }\n\n    const newTodo = {\n      id: Math.floor(Math.random() * 10000),\n      text: text\n    };\n    const newTodos = [...todos, newTodo];\n    setTodos(newTodos);\n  };\n\n  const removeTodo = id => {\n    const newTodos = todos.filter(todo => todo.id !== id);\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (id, newText) => {\n    const newTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.text = newText;\n      }\n\n      return todo;\n    });\n  };\n\n  const todoHtml = todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n    todo: todo,\n    updateTodo: updateTodo,\n    removeTodo: removeTodo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n      createTodo: createTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), todoHtml]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GJtCbS+0/pvZ2CkotHGybsoGilc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/july/Desktop/study/my-todo/my-todo-app/src/App.js"],"names":["React","useState","Todo","TodoForm","App","defaultTodo","id","text","todos","setTodos","createTodo","newTodo","Math","floor","random","newTodos","removeTodo","filter","todo","updateTodo","newText","map","todoHtml"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,WAAP,C,CACA;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,WAAW,GAAG,CAClB;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AAFR,GADkB,EAKlB;AACED,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AAFR,GALkB,CAApB;AAWA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACI,WAAD,CAAlC;;AAEA,QAAMK,UAAU,GAAIH,IAAD,IAAU;AAC3B,QAAIA,IAAI,KAAK,EAAb,EAAiB;AACf;AACD;;AAED,UAAMI,OAAO,GAAG;AACdL,MAAAA,EAAE,EAAEM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADU;AAEdP,MAAAA,IAAI,EAAEA;AAFQ,KAAhB;AAKA,UAAMQ,QAAQ,GAAG,CAAC,GAAGP,KAAJ,EAAWG,OAAX,CAAjB;AAEAF,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACD,GAbD;;AAeA,QAAMC,UAAU,GAAIV,EAAD,IAAQ;AACzB,UAAMS,QAAQ,GAAGP,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACZ,EAAL,KAAYA,EAAnC,CAAjB;AACAG,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACD,GAHD;;AAKA,QAAMI,UAAU,GAAG,CAACb,EAAD,EAAKc,OAAL,KAAiB;AAClC,UAAML,QAAQ,GAAGP,KAAK,CAACa,GAAN,CAAWH,IAAD,IAAU;AACnC,UAAIA,IAAI,CAACZ,EAAL,KAAYA,EAAhB,EAAoB;AAClBY,QAAAA,IAAI,CAACX,IAAL,GAAYa,OAAZ;AACD;;AACD,aAAOF,IAAP;AACD,KALgB,CAAjB;AAMD,GAPD;;AASA,QAAMI,QAAQ,GAAGd,KAAK,CAACa,GAAN,CAAWH,IAAD,iBACzB,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAkB,IAAA,UAAU,EAAEC,UAA9B;AAA0C,IAAA,UAAU,EAAEH;AAAtD;AAAA;AAAA;AAAA;AAAA,UADe,CAAjB;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,UAAU,EAAEN;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,EAGGY,QAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAtDQlB,G;;KAAAA,G;AAwDT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Todo from \"./components/Todo\";\nimport TodoForm from \"./components/TodoForm\";\nimport \"./App.css\";\n// import ButtonText from \"./components/ButtonText\";\n\nfunction App() {\n  const defaultTodo = [\n    {\n      id: 1,\n      text: \"walk with a dog\",\n    },\n    {\n      id: 2,\n      text: \"buy bread\",\n    },\n  ];\n\n  const [todos, setTodos] = useState(defaultTodo);\n\n  const createTodo = (text) => {\n    if (text === \"\") {\n      return;\n    }\n\n    const newTodo = {\n      id: Math.floor(Math.random() * 10000),\n      text: text,\n    };\n\n    const newTodos = [...todos, newTodo];\n\n    setTodos(newTodos);\n  };\n\n  const removeTodo = (id) => {\n    const newTodos = todos.filter((todo) => todo.id !== id);\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (id, newText) => {\n    const newTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.text = newText        \n      } \n      return todo\n    });\n  };\n\n  const todoHtml = todos.map((todo) => (\n    <Todo todo={todo} updateTodo={updateTodo} removeTodo={removeTodo} />\n  ));\n\n  return (\n    <div className=\"todo-app\">\n      <TodoForm createTodo={createTodo} />\n      {/* <ButtonText /> */}\n      {todoHtml}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}