{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/july/Desktop/study/my-todo/my-todo-app/src/components/Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\n\nfunction Todo({\n  todo,\n  removeTodo\n}) {\n  _s();\n\n  const displayMode = \"displayMode\";\n  const editMode = \"editMode\";\n  const [mode, setMode] = useState(displayMode);\n  const updateInputRef = useRef();\n\n  const onEditButtonClick = e => {\n    e.preventDefault();\n    setMode(editMode);\n  };\n\n  const onSubmitButtonClick = e => {\n    e.preventDefault();\n    setMode(displayMode);\n  };\n\n  if (mode === displayMode) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [todo.id, \" \", todo.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-edit\",\n        onClick: onEditButtonClick,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeTodo(todo.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  } else if (mode === editMode) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Update your todo\",\n        className: \"input-edit\",\n        ref: updateInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-edit\",\n        onClick: onSubmitButtonClick,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Todo, \"gZ4nR7z6sE+hfiZ7GiCBrgXATJ0=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/july/Desktop/study/my-todo/my-todo-app/src/components/Todo.jsx"],"names":["React","useState","useRef","Todo","todo","removeTodo","displayMode","editMode","mode","setMode","updateInputRef","onEditButtonClick","e","preventDefault","onSubmitButtonClick","id","text"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAd,EAAoC;AAAA;;AAClC,QAAMC,WAAW,GAAG,aAApB;AACA,QAAMC,QAAQ,GAAG,UAAjB;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAACK,WAAD,CAAhC;AAEA,QAAMI,cAAc,GAAGR,MAAM,EAA7B;;AAEA,QAAMS,iBAAiB,GAAIC,CAAD,IAAO;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,OAAO,CAACF,QAAD,CAAP;AACD,GAHD;;AAKA,QAAMO,mBAAmB,GAAIF,CAAD,IAAO;AACjCA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,OAAO,CAACH,WAAD,CAAP;AACD,GAHD;;AAKA,MAAIE,IAAI,KAAKF,WAAb,EAA0B;AACxB,wBACE;AAAA,8BACE;AAAA,mBACGF,IAAI,CAACW,EADR,OACaX,IAAI,CAACY,IADlB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAEL,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAQ,QAAA,OAAO,EAAE,MAAMN,UAAU,CAACD,IAAI,CAACW,EAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GAZD,MAYO,IAAIP,IAAI,KAAKD,QAAb,EAAuB;AAC5B,wBACE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,kBAFd;AAGE,QAAA,SAAS,EAAC,YAHZ;AAIE,QAAA,GAAG,EAAEG;AAJP;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAEI,mBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;AACF;;GA3CQX,I;;KAAAA,I;AA6CT,eAAeA,IAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\n\nfunction Todo({ todo, removeTodo }) {\n  const displayMode = \"displayMode\";\n  const editMode = \"editMode\";\n\n  const [mode, setMode] = useState(displayMode);\n\n  const updateInputRef = useRef();\n\n  const onEditButtonClick = (e) => {\n    e.preventDefault();\n    setMode(editMode);\n  };\n\n  const onSubmitButtonClick = (e) => {\n    e.preventDefault();\n    setMode(displayMode)\n  }\n\n  if (mode === displayMode) {\n    return (\n      <div>\n        <p>\n          {todo.id} {todo.text}\n        </p>\n        <button className=\"button-edit\" onClick={onEditButtonClick}>\n          Update\n        </button>\n        <button onClick={() => removeTodo(todo.id)}>Delete</button>\n      </div>\n    );\n  } else if (mode === editMode) {\n    return (\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Update your todo\"\n          className=\"input-edit\"\n          ref={updateInputRef}\n        />\n        <button className=\"button-edit\" onClick={onSubmitButtonClick}>Submit</button>\n      </div>\n    );\n  }\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}