{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/july/Desktop/study/my-todo/my-todo-app/src/components/TodoList.jsx\";\nimport React from \"react\";\nimport Todo from \"./Todo\";\n\nfunction TodoList(todos, removeTodo, updateTodo) {\n  // const removeTodo = (id) => {\n  //   const newTodos = todos.filter((todo) => todo.id !== id);\n  //   setTodos(newTodos);\n  // };\n  // const updateTodo = (id, newTodo) => {\n  //   const newTodos = todos.map((todo) => {\n  //     if (todo.id === id) {\n  //       return newTodo;\n  //     }\n  //     return todo;\n  //   });\n  //   setTodos(newTodos);\n  // };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: todos.map(todo => {\n      return /*#__PURE__*/_jsxDEV(Todo, {\n        todo: todo,\n        updateTodo: updateTodo,\n        removeTodo: removeTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false);\n}\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/july/Desktop/study/my-todo/my-todo-app/src/components/TodoList.jsx"],"names":["React","Todo","TodoList","todos","removeTodo","updateTodo","map","todo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,UAAzB,EAAqCC,UAArC,EAAkD;AAEhD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACE;AAAA,cACGF,KAAK,CAACG,GAAN,CAAWC,IAAI,IAAI;AAClB,0BAAO,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,UAAU,EAAEF,UAA9B;AAA0C,QAAA,UAAU,EAAED;AAAtD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA;AADH,mBADF;AAOD;;KAxBQF,Q;AA0BT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport Todo from \"./Todo\";\n\nfunction TodoList(todos, removeTodo, updateTodo ) {\n\n  // const removeTodo = (id) => {\n  //   const newTodos = todos.filter((todo) => todo.id !== id);\n  //   setTodos(newTodos);\n  // };\n\n  // const updateTodo = (id, newTodo) => {\n  //   const newTodos = todos.map((todo) => {\n  //     if (todo.id === id) {\n  //       return newTodo;\n  //     }\n  //     return todo;\n  //   });\n  //   setTodos(newTodos);\n  // };\n\n  return (\n    <>\n      {todos.map( todo => {\n        return <Todo todo={todo} updateTodo={updateTodo} removeTodo={removeTodo} />\n      })}\n    </>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}