{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/july/Desktop/study/my-todo/my-todo-app/src/components/Todo.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { AiOutlineEdit } from \"react-icons/ai\";\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\nimport { FaCheck } from \"react-icons/fa\";\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nfunction Todo({\n  todo,\n  updateTodo,\n  removeTodo,\n  isHighlighted,\n  completeTodo\n}) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const displayMode = \"displayMode\";\n  const editMode = \"editMode\";\n  const [mode, setMode] = useState(displayMode);\n  const [newTodoText, setNewTodoText] = useState(todo.text); // const [checked, setChecked] = useState(!!todo.isCompleted);\n\n  const onEditButtonClick = e => {\n    e.preventDefault();\n    setMode(editMode);\n  };\n\n  const onSubmitButtonClick = e => {\n    e.preventDefault();\n    const newTodo = todo;\n    newTodo.text = newTodoText;\n    updateTodo(todo.id, newTodo);\n    setMode(displayMode);\n  };\n\n  const useStyles = makeStyles({\n    root: {\n      '&:hover': {\n        backgroundColor: 'transparent'\n      }\n    },\n    icon: {\n      borderRadius: 3,\n      width: 16,\n      height: 16,\n      boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n      backgroundColor: '#f5f8fa',\n      backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n      '$root.Mui-focusVisible &': {\n        outline: '2px auto rgba(19,124,189,.6)',\n        outlineOffset: 2\n      },\n      'input:hover ~ &': {\n        backgroundColor: '#ebf1f5'\n      },\n      'input:disabled ~ &': {\n        boxShadow: 'none',\n        background: 'rgba(206,217,224,.5)'\n      }\n    },\n    checkedIcon: {\n      backgroundColor: '#137cbd',\n      backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n      '&:before': {\n        display: 'block',\n        width: 16,\n        height: 16,\n        backgroundImage: \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" + \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" + \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n        content: '\"\"'\n      },\n      'input:hover ~ &': {\n        backgroundColor: '#106ba3'\n      }\n    }\n  });\n\n  const StyledCheckbox = props => {\n    _s();\n\n    const classes = useStyles();\n    return /*#__PURE__*/_jsxDEV(Checkbox, {\n      className: classes.root,\n      disableRipple: true,\n      color: \"default\",\n      checkedIcon: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: clsx(classes.icon, classes.checkedIcon)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 20\n      }, this),\n      icon: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this),\n      inputProps: {\n        'aria-label': 'decorative checkbox'\n      },\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this);\n  }; // const Checkbox = (props) => (\n  //   <input \n  //   className=\"checkbox\"\n  //   type=\"checkbox\"\n  //   onClick={() => completeTodo(todo.id)}\n  //   checked={checked}\n  //   onChange={() => setChecked(!checked)}\n  //   {...props}\n  //   />\n  // )\n\n\n  _s(StyledCheckbox, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n    return [useStyles];\n  });\n\n  if (mode === displayMode) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `todo-item  ${isHighlighted ? \"highlightedTodo\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(StyledCheckbox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `todo-text ${todo.isCompleted && \"todo-is-completed\"}`,\n          children: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-edit\",\n          children: /*#__PURE__*/_jsxDEV(AiOutlineEdit, {\n            onClick: onEditButtonClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-delete\",\n          children: /*#__PURE__*/_jsxDEV(AiOutlineCloseCircle, {\n            onClick: () => removeTodo(todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else if (mode === editMode) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"submit-todo-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Update your todo\",\n          className: \"submit-todo-input\",\n          onChange: event => setNewTodoText(event.target.value),\n          value: newTodoText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-submit\",\n          onClick: onSubmitButtonClick,\n          children: /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\n\n_s2(Todo, \"+AQfQCvs1SIQ24EyPyt0WXxqbJw=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/july/Desktop/study/my-todo/my-todo-app/src/components/Todo.jsx"],"names":["React","useState","AiOutlineEdit","AiOutlineCloseCircle","FaCheck","clsx","makeStyles","Checkbox","Todo","todo","updateTodo","removeTodo","isHighlighted","completeTodo","displayMode","editMode","mode","setMode","newTodoText","setNewTodoText","text","onEditButtonClick","e","preventDefault","onSubmitButtonClick","newTodo","id","useStyles","root","backgroundColor","icon","borderRadius","width","height","boxShadow","backgroundImage","outline","outlineOffset","background","checkedIcon","display","content","StyledCheckbox","props","classes","isCompleted","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { AiOutlineEdit } from \"react-icons/ai\";\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\nimport { FaCheck } from \"react-icons/fa\";\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nfunction Todo({\n  todo,\n  updateTodo,\n  removeTodo,\n  isHighlighted,\n  completeTodo,\n}) {\n  const displayMode = \"displayMode\";\n  const editMode = \"editMode\";\n\n  const [mode, setMode] = useState(displayMode);\n\n  const [newTodoText, setNewTodoText] = useState(todo.text);\n\n  // const [checked, setChecked] = useState(!!todo.isCompleted);\n\n  const onEditButtonClick = (e) => {\n    e.preventDefault();\n    setMode(editMode);\n  };\n\n  const onSubmitButtonClick = (e) => {\n    e.preventDefault();\n    const newTodo = todo;\n    newTodo.text = newTodoText;\n\n    updateTodo(todo.id, newTodo);\n    setMode(displayMode);\n  };\n\n  const useStyles = makeStyles({\n    root: {\n      '&:hover': {\n        backgroundColor: 'transparent',\n      },\n    },\n    icon: {\n      borderRadius: 3,\n      width: 16,\n      height: 16,\n      boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n      backgroundColor: '#f5f8fa',\n      backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n      '$root.Mui-focusVisible &': {\n        outline: '2px auto rgba(19,124,189,.6)',\n        outlineOffset: 2,\n      },\n      'input:hover ~ &': {\n        backgroundColor: '#ebf1f5',\n      },\n      'input:disabled ~ &': {\n        boxShadow: 'none',\n        background: 'rgba(206,217,224,.5)',\n      },\n    },\n    checkedIcon: {\n      backgroundColor: '#137cbd',\n      backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n      '&:before': {\n        display: 'block',\n        width: 16,\n        height: 16,\n        backgroundImage:\n          \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\n          \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\n          \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n        content: '\"\"',\n      },\n      'input:hover ~ &': {\n        backgroundColor: '#106ba3',\n      },\n    },\n  });\n\n  const StyledCheckbox = (props) => {\n    const classes = useStyles();\n  return (\n    <Checkbox\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\n      icon={<span className={classes.icon} />}\n      inputProps={{ 'aria-label': 'decorative checkbox' }}\n      {...props}\n    />\n  );\n  }\n\n  // const Checkbox = (props) => (\n  //   <input \n  //   className=\"checkbox\"\n  //   type=\"checkbox\"\n  //   onClick={() => completeTodo(todo.id)}\n  //   checked={checked}\n  //   onChange={() => setChecked(!checked)}\n  //   {...props}\n  //   />\n  // )\n\n  if (mode === displayMode) {\n    return (\n      <>\n        <div className={`todo-item  ${isHighlighted ? \"highlightedTodo\" : \"\"}`}>\n          <StyledCheckbox />\n          <div\n            className={`todo-text ${todo.isCompleted && \"todo-is-completed\"}`}\n          >\n            {todo.text}\n          </div>\n          <div className=\"icon-edit\">\n            <AiOutlineEdit onClick={onEditButtonClick} />\n          </div>\n          <div className=\"icon-delete\">\n            <AiOutlineCloseCircle onClick={() => removeTodo(todo.id)} />\n          </div>\n        </div>\n      </>\n    );\n  } else if (mode === editMode) {\n    return (\n      <>\n        <form className=\"submit-todo-form\">\n          <input\n            type=\"text\"\n            placeholder=\"Update your todo\"\n            className=\"submit-todo-input\"\n            onChange={(event) => setNewTodoText(event.target.value)}\n            value={newTodoText}\n          />\n          <button className=\"button-submit\" onClick={onSubmitButtonClick}>\n            <FaCheck />\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}