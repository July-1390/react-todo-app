{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/july/Desktop/study/my-todo/my-todo-app/src/components/TodoForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport \"../App.css\";\n\nfunction TodoForm({\n  createTodo\n}) {\n  _s();\n\n  const [newTodoValue, setNewTodoValue] = useState(\"\");\n  const updateInputRef = useRef(null);\n\n  const onEditButtonClick = () => {\n    updateInputRef.current.display = 'block'; // updateInputRef.current.focus()\n  };\n\n  const handleCreateButtonClick = e => {\n    e.preventDefault();\n    createTodo(newTodoValue);\n    setNewTodoValue('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"todo-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"What to do?\",\n        className: \"todo-input\",\n        onChange: event => setNewTodoValue(event.target.value),\n        value: newTodoValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        onClick: handleCreateButtonClick,\n        children: \"ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Update your todo\",\n        className: \"input-edit\",\n        ref: updateInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-edit\",\n        onClick: onEditButtonClick,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(TodoForm, \"yEEwTFLn0H7LQSV+zPUs3UVMVbI=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/Users/july/Desktop/study/my-todo/my-todo-app/src/components/TodoForm.jsx"],"names":["React","useState","useRef","TodoForm","createTodo","newTodoValue","setNewTodoValue","updateInputRef","onEditButtonClick","current","display","handleCreateButtonClick","e","preventDefault","event","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAO,YAAP;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAkC;AAAA;;AAChC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAMM,cAAc,GAAGL,MAAM,CAAC,IAAD,CAA7B;;AAED,QAAMM,iBAAiB,GAAG,MAAM;AAC7BD,IAAAA,cAAc,CAACE,OAAf,CAAuBC,OAAvB,GAAiC,OAAjC,CAD6B,CAE7B;AACD,GAHF;;AAOC,QAAMC,uBAAuB,GAAIC,CAAD,IAAO;AACnCA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,UAAU,CAACC,YAAD,CAAV;AACAC,IAAAA,eAAe,CAAC,EAAD,CAAf;AACH,GAJD;;AAMA,sBACE;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,aAFd;AAGE,QAAA,SAAS,EAAC,YAHZ;AAIE,QAAA,QAAQ,EAAEQ,KAAK,IAAIR,eAAe,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAJpC;AAKE,QAAA,KAAK,EAAEX;AALT;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAEM,uBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAWE;AACA,QAAA,IAAI,EAAE,MADN;AAEA,QAAA,WAAW,EAAG,kBAFd;AAGA,QAAA,SAAS,EAAG,YAHZ;AAIA,QAAA,GAAG,EAAEJ;AAJL;AAAA;AAAA;AAAA;AAAA,cAXF,eAiBE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AACA,QAAA,OAAO,EAAEC,iBADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA2BD;;GA7CQL,Q;;KAAAA,Q;AA+CT,eAAeA,QAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"../App.css\";\n\nfunction TodoForm({ createTodo }) {\n  const [newTodoValue, setNewTodoValue] = useState(\"\");\n\n  const updateInputRef = useRef(null)\n\n const onEditButtonClick = () => {\n    updateInputRef.current.display = 'block'\n    // updateInputRef.current.focus()\n  }\n\n\n\n  const handleCreateButtonClick = (e) => {\n      e.preventDefault();\n      createTodo(newTodoValue)\n      setNewTodoValue('')\n  }\n\n  return (\n    <>\n      <form className=\"todo-form\" >\n        <input\n          type=\"text\"\n          placeholder=\"What to do?\"\n          className=\"todo-input\"\n          onChange={event => setNewTodoValue(event.target.value)}\n          value={newTodoValue}\n        />\n        <button className=\"todo-button\" onClick={handleCreateButtonClick}>\n          ok\n        </button>\n        <input \n        type ='text'\n        placeholder = 'Update your todo'\n        className = 'input-edit'\n        ref={updateInputRef}\n        /> \n        <button className='button-edit'\n        onClick={onEditButtonClick}>\n        Update\n        </button>\n\n      </form>\n    </>\n  );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}