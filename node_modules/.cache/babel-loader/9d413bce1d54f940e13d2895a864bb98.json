{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/july/Desktop/study/my-todo/my-todo-app/src/components/Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FcRefresh } from \"react-icons/fc\";\n\nfunction Todo({\n  todo,\n  updateTodo,\n  removeTodo\n}) {\n  _s();\n\n  const displayMode = \"displayMode\";\n  const editMode = \"editMode\";\n  const [mode, setMode] = useState(displayMode);\n  const [newTodoText, setNewTodoText] = useState(todo.text);\n\n  const onEditButtonClick = e => {\n    e.preventDefault();\n    setMode(editMode);\n  };\n\n  const onSubmitButtonClick = e => {\n    e.preventDefault();\n    const newTodo = todo;\n    newTodo.text = newTodoText;\n    updateTodo(todo.id, newTodo);\n    setMode(displayMode);\n  };\n\n  if (mode === displayMode) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-item\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [todo.id, \" \", todo.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-edit\",\n        children: /*#__PURE__*/_jsxDEV(FcRefresh, {\n          onClick: onEditButtonClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-delete\",\n        onClick: () => removeTodo(todo.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else if (mode === editMode) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Update your todo\",\n        className: \"input-edit\",\n        onChange: event => setNewTodoText(event.target.value),\n        value: newTodoText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-edit\",\n        onClick: onSubmitButtonClick,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Todo, \"+AQfQCvs1SIQ24EyPyt0WXxqbJw=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/july/Desktop/study/my-todo/my-todo-app/src/components/Todo.jsx"],"names":["React","useState","FcRefresh","Todo","todo","updateTodo","removeTodo","displayMode","editMode","mode","setMode","newTodoText","setNewTodoText","text","onEditButtonClick","e","preventDefault","onSubmitButtonClick","newTodo","id","event","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,gBAA1B;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA;AAApB,CAAd,EAAgD;AAAA;;AAC9C,QAAMC,WAAW,GAAG,aAApB;AACA,QAAMC,QAAQ,GAAG,UAAjB;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACM,WAAD,CAAhC;AAEA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAACG,IAAI,CAACS,IAAN,CAA9C;;AAEA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,OAAO,CAACF,QAAD,CAAP;AACD,GAHD;;AAKA,QAAMS,mBAAmB,GAAIF,CAAD,IAAO;AACjCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAME,OAAO,GAAGd,IAAhB;AACAc,IAAAA,OAAO,CAACL,IAAR,GAAeF,WAAf;AAEAN,IAAAA,UAAU,CAACD,IAAI,CAACe,EAAN,EAAUD,OAAV,CAAV;AACAR,IAAAA,OAAO,CAACH,WAAD,CAAP;AACD,GAPD;;AASA,MAAIE,IAAI,KAAKF,WAAb,EAA0B;AACxB,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAA,qBACGH,IAAI,CAACe,EADR,OACaf,IAAI,CAACS,IADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,OAAO,EAAEC;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,eASE;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAkC,QAAA,OAAO,EAAE,MAAMR,UAAU,CAACF,IAAI,CAACe,EAAN,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA,oBADF;AAeD,GAhBD,MAgBO,IAAIV,IAAI,KAAKD,QAAb,EAAuB;AAC5B,wBACE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,kBAFd;AAGE,QAAA,SAAS,EAAC,YAHZ;AAIE,QAAA,QAAQ,EAAGY,KAAD,IAAWR,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAJrC;AAKE,QAAA,KAAK,EAAEX;AALT;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAEM,mBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;AACF;;GAtDQd,I;;KAAAA,I;AAwDT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { FcRefresh } from \"react-icons/fc\";\n\nfunction Todo({ todo, updateTodo, removeTodo }) {\n  const displayMode = \"displayMode\";\n  const editMode = \"editMode\";\n\n  const [mode, setMode] = useState(displayMode);\n\n  const [newTodoText, setNewTodoText] = useState(todo.text);\n\n  const onEditButtonClick = (e) => {\n    e.preventDefault();\n    setMode(editMode);\n  };\n\n  const onSubmitButtonClick = (e) => {\n    e.preventDefault();\n    const newTodo = todo;\n    newTodo.text = newTodoText;\n\n    updateTodo(todo.id, newTodo);\n    setMode(displayMode);\n  };\n\n  if (mode === displayMode) {\n    return (\n      <>\n        <div className=\"todo-item\">\n          <p>\n            {todo.id} {todo.text}\n          </p>\n        </div>\n        <div className=\"button-edit\">\n          <FcRefresh onClick={onEditButtonClick} />\n        </div>\n        <button className=\"button-delete\" onClick={() => removeTodo(todo.id)}>\n          Delete\n        </button>\n      </>\n    );\n  } else if (mode === editMode) {\n    return (\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Update your todo\"\n          className=\"input-edit\"\n          onChange={(event) => setNewTodoText(event.target.value)}\n          value={newTodoText}\n        />\n        <button className=\"button-edit\" onClick={onSubmitButtonClick}>\n          Submit\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}