{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/july/Desktop/study/my-todo/my-todo-app/src/components/Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FcSynchronize } from \"react-icons/fc\";\nimport { FcCancel } from \"react-icons/fc\";\nimport { FcOk } from \"react-icons/fc\";\n\nfunction Todo({\n  todo,\n  updateTodo,\n  removeTodo\n}) {\n  _s();\n\n  const displayMode = \"displayMode\";\n  const editMode = \"editMode\";\n  const [mode, setMode] = useState(displayMode);\n  const [newTodoText, setNewTodoText] = useState(todo.text);\n\n  const onEditButtonClick = e => {\n    e.preventDefault();\n    setMode(editMode);\n  };\n\n  const onSubmitButtonClick = e => {\n    e.preventDefault();\n    const newTodo = todo;\n    newTodo.text = newTodoText;\n    updateTodo(todo.id, newTodo);\n    setMode(displayMode);\n  };\n\n  if (mode === displayMode) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [todo.id, \" \", todo.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-edit\",\n          children: /*#__PURE__*/_jsxDEV(FcSynchronize, {\n            onClick: onEditButtonClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-delete\",\n          children: /*#__PURE__*/_jsxDEV(FcCancel, {\n            onClick: () => removeTodo(todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else if (mode === editMode) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Update your todo\",\n        className: \"todo-input\",\n        onChange: event => setNewTodoText(event.target.value),\n        value: newTodoText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-edit\",\n        children: /*#__PURE__*/_jsxDEV(FcOk, {\n          onClick: onSubmitButtonClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Todo, \"+AQfQCvs1SIQ24EyPyt0WXxqbJw=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/july/Desktop/study/my-todo/my-todo-app/src/components/Todo.jsx"],"names":["React","useState","FcSynchronize","FcCancel","FcOk","Todo","todo","updateTodo","removeTodo","displayMode","editMode","mode","setMode","newTodoText","setNewTodoText","text","onEditButtonClick","e","preventDefault","onSubmitButtonClick","newTodo","id","event","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,IAAT,QAAqB,gBAArB;;AAGA,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA;AAApB,CAAd,EAAgD;AAAA;;AAC9C,QAAMC,WAAW,GAAG,aAApB;AACA,QAAMC,QAAQ,GAAG,UAAjB;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACQ,WAAD,CAAhC;AAEA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAACK,IAAI,CAACS,IAAN,CAA9C;;AAEA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,OAAO,CAACF,QAAD,CAAP;AACD,GAHD;;AAKA,QAAMS,mBAAmB,GAAIF,CAAD,IAAO;AACjCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAME,OAAO,GAAGd,IAAhB;AACAc,IAAAA,OAAO,CAACL,IAAR,GAAeF,WAAf;AAEAN,IAAAA,UAAU,CAACD,IAAI,CAACe,EAAN,EAAUD,OAAV,CAAV;AACAR,IAAAA,OAAO,CAACH,WAAD,CAAP;AACD,GAPD;;AASA,MAAIE,IAAI,KAAKF,WAAb,EAA0B;AACxB,wBACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA,qBACGH,IAAI,CAACe,EADR,OACaf,IAAI,CAACS,IADlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE,QAAC,aAAD;AAAe,YAAA,OAAO,EAAEC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,OAAO,EAAE,MAAMR,UAAU,CAACF,IAAI,CAACe,EAAN;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAeD,GAhBD,MAgBO,IAAIV,IAAI,KAAKD,QAAb,EAAuB;AAC5B,wBACE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,kBAFd;AAGE,QAAA,SAAS,EAAC,YAHZ;AAIE,QAAA,QAAQ,EAAGY,KAAD,IAAWR,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAJrC;AAKE,QAAA,KAAK,EAAEX;AALT;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,OAAO,EAAEM;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;AACF;;GAtDQd,I;;KAAAA,I;AAwDT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { FcSynchronize } from \"react-icons/fc\";\nimport { FcCancel } from \"react-icons/fc\";\nimport { FcOk } from \"react-icons/fc\";\n\n\nfunction Todo({ todo, updateTodo, removeTodo }) {\n  const displayMode = \"displayMode\";\n  const editMode = \"editMode\";\n\n  const [mode, setMode] = useState(displayMode);\n\n  const [newTodoText, setNewTodoText] = useState(todo.text);\n\n  const onEditButtonClick = (e) => {\n    e.preventDefault();\n    setMode(editMode);\n  };\n\n  const onSubmitButtonClick = (e) => {\n    e.preventDefault();\n    const newTodo = todo;\n    newTodo.text = newTodoText;\n\n    updateTodo(todo.id, newTodo);\n    setMode(displayMode);\n  };\n\n  if (mode === displayMode) {\n    return (\n      <>\n        <div className=\"todo-item\">\n          <p>\n            {todo.id} {todo.text}\n          </p>\n          <div className=\"icon-edit\">\n            <FcSynchronize onClick={onEditButtonClick} />\n          </div>\n          <div className=\"icon-delete\">\n            <FcCancel onClick={() => removeTodo(todo.id)}/>\n          </div>\n        </div>\n      </>\n    );\n  } else if (mode === editMode) {\n    return (\n      <div> \n        <input\n          type=\"text\"\n          placeholder=\"Update your todo\"\n          className=\"todo-input\"\n          onChange={(event) => setNewTodoText(event.target.value)}\n          value={newTodoText}\n        />\n        <div className=\"icon-edit\">\n          <FcOk onClick={onSubmitButtonClick} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}