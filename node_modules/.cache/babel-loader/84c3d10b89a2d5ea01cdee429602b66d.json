{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/july/Desktop/study/my-todo/my-todo-app/src/components/Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { AiOutlineEdit } from \"react-icons/ai\";\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\nimport { FaCheck } from \"react-icons/fa\";\nimport styled from 'styled-components';\n\nfunction Todo({\n  todo,\n  updateTodo,\n  removeTodo,\n  isHighlighted,\n  completeTodo\n}) {\n  _s();\n\n  const displayMode = \"displayMode\";\n  const editMode = \"editMode\";\n  const [mode, setMode] = useState(displayMode);\n  const [newTodoText, setNewTodoText] = useState(todo.text);\n  const StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  background: ${props => props.checked ? 'salmon' : 'papayawhip'};\n  border-radius: 3px;\n  transition: all 150ms;\n  ${CheckMark} {\n    visibility: ${props => props.checked ? 'visible' : 'hidden'}\n  }\n  `;\n  const CheckMark = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 2px;\n  `;\n\n  const Checkbox = ({\n    checked,\n    ...props\n  }) => /*#__PURE__*/_jsxDEV(StyledCheckbox, {\n    type: \"checkbox\",\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(CheckMark, {\n      viewBox: \"0 0 24 24\",\n      children: /*#__PURE__*/_jsxDEV(\"polyline\", {\n        points: \"20 6 9 17 4 12\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n\n  const handleCheckboxChange = e => this.setState({\n    checked: e.target.checked\n  });\n\n  const onEditButtonClick = e => {\n    e.preventDefault();\n    setMode(editMode);\n  };\n\n  const onSubmitButtonClick = e => {\n    e.preventDefault();\n    const newTodo = todo;\n    newTodo.text = newTodoText;\n    updateTodo(todo.id, newTodo);\n    setMode(displayMode);\n  };\n\n  if (mode === displayMode) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `todo-item  ${isHighlighted ? \"highlightedTodo\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          className: \"checkbox\",\n          onClick: () => completeTodo(todo.id),\n          checked: this.state.checked,\n          onChange: handleCheckboxChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `todo-text ${todo.isCompleted && 'todo-is-completed'}`,\n          children: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-edit\",\n          children: /*#__PURE__*/_jsxDEV(AiOutlineEdit, {\n            onClick: onEditButtonClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-delete\",\n          children: /*#__PURE__*/_jsxDEV(AiOutlineCloseCircle, {\n            onClick: () => removeTodo(todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else if (mode === editMode) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"submit-todo-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Update your todo\",\n          className: \"submit-todo-input\",\n          onChange: event => setNewTodoText(event.target.value),\n          value: newTodoText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-submit\",\n          onClick: onSubmitButtonClick,\n          children: /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\n\n_s(Todo, \"+AQfQCvs1SIQ24EyPyt0WXxqbJw=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/july/Desktop/study/my-todo/my-todo-app/src/components/Todo.jsx"],"names":["React","useState","AiOutlineEdit","AiOutlineCloseCircle","FaCheck","styled","Todo","todo","updateTodo","removeTodo","isHighlighted","completeTodo","displayMode","editMode","mode","setMode","newTodoText","setNewTodoText","text","StyledCheckbox","div","props","checked","CheckMark","svg","Checkbox","handleCheckboxChange","e","setState","target","onEditButtonClick","preventDefault","onSubmitButtonClick","newTodo","id","state","isCompleted","event","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { AiOutlineEdit } from \"react-icons/ai\";\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\nimport { FaCheck } from \"react-icons/fa\";\nimport styled from 'styled-components'\n\nfunction Todo({ todo, updateTodo, removeTodo, isHighlighted, completeTodo }) {\n  const displayMode = \"displayMode\";\n  const editMode = \"editMode\";\n\n  const [mode, setMode] = useState(displayMode);\n\n  const [newTodoText, setNewTodoText] = useState(todo.text);\n\n  const StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  background: ${props => props.checked ? 'salmon' : 'papayawhip'};\n  border-radius: 3px;\n  transition: all 150ms;\n  ${CheckMark} {\n    visibility: ${props => props.checked ? 'visible' : 'hidden'}\n  }\n  `\n\n  const CheckMark = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 2px;\n  `\n\n\n\n  const Checkbox = ({checked, ...props}) => (\n    <StyledCheckbox type='checkbox' {...props} >\n      <CheckMark viewBox=\"0 0 24 24\">\n        <polyline points=\"20 6 9 17 4 12\" />\n      </CheckMark>\n    </StyledCheckbox>\n  )\n\n  const handleCheckboxChange = e =>\n  this.setState({checked: e.target.checked})\n\n  const onEditButtonClick = (e) => {\n    e.preventDefault();\n    setMode(editMode);\n  };\n\n  const onSubmitButtonClick = (e) => {\n    e.preventDefault();\n    const newTodo = todo;\n    newTodo.text = newTodoText;\n\n    updateTodo(todo.id, newTodo);\n    setMode(displayMode);\n  };\n\n  if (mode === displayMode) {\n    return (\n      <>\n        <div className={`todo-item  ${isHighlighted ? \"highlightedTodo\" : \"\"}`}>\n        <Checkbox \n        \n        className='checkbox' \n        onClick={() => completeTodo(todo.id)} \n        checked={this.state.checked}\n        onChange={handleCheckboxChange}\n        />\n          <div className={`todo-text ${todo.isCompleted && 'todo-is-completed'}`}>\n            {todo.text}                       \n          </div>\n          <div className=\"icon-edit\">\n            <AiOutlineEdit onClick={onEditButtonClick} />\n          </div>\n          <div className=\"icon-delete\">\n            <AiOutlineCloseCircle onClick={() => removeTodo(todo.id)} />\n          </div>\n        </div>\n      </>\n    );\n  } else if (mode === editMode) {\n    return (\n      <>\n        <form className=\"submit-todo-form\">\n          <input\n            type=\"text\"\n            placeholder=\"Update your todo\"\n            className=\"submit-todo-input\"\n            onChange={(event) => setNewTodoText(event.target.value)}\n            value={newTodoText}\n          />\n          <button className=\"button-submit\" onClick={onSubmitButtonClick}>\n            <FaCheck />\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}